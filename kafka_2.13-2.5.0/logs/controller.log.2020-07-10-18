[2020-07-10 18:01:00,491] INFO [Controller id=0] New topics: [Set(Prediction)], deleted topics: [Set()], new partition replica assignment [Map(Prediction-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-10 18:01:00,492] INFO [Controller id=0] New partition creation callback for Prediction-0 (kafka.controller.KafkaController)
[2020-07-10 18:01:00,560] INFO [Controller id=0] New topics: [Set(message)], deleted topics: [Set()], new partition replica assignment [Map(message-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-10 18:01:00,560] INFO [Controller id=0] New partition creation callback for message-0 (kafka.controller.KafkaController)
[2020-07-10 18:03:50,029] DEBUG [Controller id=0] Delete topics listener fired for topics message to be deleted (kafka.controller.KafkaController)
[2020-07-10 18:03:50,030] INFO [Controller id=0] Starting topic deletion for topics message (kafka.controller.KafkaController)
[2020-07-10 18:03:50,030] INFO [Topic Deletion Manager 0] Handling deletion for topics message (kafka.controller.TopicDeletionManager)
[2020-07-10 18:03:50,030] INFO [Topic Deletion Manager 0] Deletion of topic message (re)started (kafka.controller.TopicDeletionManager)
[2020-07-10 18:03:50,040] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=message,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-10 18:03:50,041] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=message,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-10 18:03:50,120] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(message-0 -> NONE) (kafka.controller.KafkaController)
[2020-07-10 18:03:50,120] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=message,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-07-10 18:03:50,121] INFO [Topic Deletion Manager 0] Handling deletion for topics message (kafka.controller.TopicDeletionManager)
[2020-07-10 18:03:50,266] INFO [Topic Deletion Manager 0] Deletion of topic message successfully completed (kafka.controller.TopicDeletionManager)
[2020-07-10 18:03:50,267] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-07-10 18:03:50,268] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-07-10 18:04:03,156] DEBUG [Controller id=0] Delete topics listener fired for topics Prediction to be deleted (kafka.controller.KafkaController)
[2020-07-10 18:04:03,156] INFO [Controller id=0] Starting topic deletion for topics Prediction (kafka.controller.KafkaController)
[2020-07-10 18:04:03,156] INFO [Topic Deletion Manager 0] Handling deletion for topics Prediction (kafka.controller.TopicDeletionManager)
[2020-07-10 18:04:03,156] INFO [Topic Deletion Manager 0] Deletion of topic Prediction (re)started (kafka.controller.TopicDeletionManager)
[2020-07-10 18:04:03,167] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=Prediction,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-10 18:04:03,167] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=Prediction,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-10 18:04:03,201] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(Prediction-0 -> NONE) (kafka.controller.KafkaController)
[2020-07-10 18:04:03,201] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Prediction,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-07-10 18:04:03,202] INFO [Topic Deletion Manager 0] Handling deletion for topics Prediction (kafka.controller.TopicDeletionManager)
[2020-07-10 18:04:03,280] INFO [Topic Deletion Manager 0] Deletion of topic Prediction successfully completed (kafka.controller.TopicDeletionManager)
[2020-07-10 18:04:03,281] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-07-10 18:04:03,282] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-07-10 18:04:25,850] INFO [Controller id=0] New topics: [Set(stateful_data_of_query)], deleted topics: [Set()], new partition replica assignment [Map(stateful_data_of_query-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-10 18:04:25,850] INFO [Controller id=0] New partition creation callback for stateful_data_of_query-0 (kafka.controller.KafkaController)
[2020-07-10 18:04:25,918] INFO [Controller id=0] New topics: [Set(Event_Error)], deleted topics: [Set()], new partition replica assignment [Map(Event_Error-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-10 18:04:25,918] INFO [Controller id=0] New partition creation callback for Event_Error-0 (kafka.controller.KafkaController)
[2020-07-10 18:04:25,998] INFO [Controller id=0] New topics: [Set(Processing_completed)], deleted topics: [Set()], new partition replica assignment [Map(Processing_completed-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-10 18:04:25,998] INFO [Controller id=0] New partition creation callback for Processing_completed-0 (kafka.controller.KafkaController)
[2020-07-10 18:04:26,088] INFO [Controller id=0] New topics: [Set(Prediction)], deleted topics: [Set()], new partition replica assignment [Map(Prediction-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-10 18:04:26,088] INFO [Controller id=0] New partition creation callback for Prediction-0 (kafka.controller.KafkaController)
[2020-07-10 18:04:26,168] INFO [Controller id=0] New topics: [HashSet(change_log_of_query)], deleted topics: [Set()], new partition replica assignment [Map(change_log_of_query-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-10 18:04:26,168] INFO [Controller id=0] New partition creation callback for change_log_of_query-0 (kafka.controller.KafkaController)
[2020-07-10 18:04:26,246] INFO [Controller id=0] New topics: [HashSet(metadata_input)], deleted topics: [HashSet()], new partition replica assignment [Map(metadata_input-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-10 18:04:26,246] INFO [Controller id=0] New partition creation callback for metadata_input-0 (kafka.controller.KafkaController)
[2020-07-10 18:04:26,314] INFO [Controller id=0] New topics: [HashSet(message)], deleted topics: [HashSet()], new partition replica assignment [Map(message-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-10 18:04:26,314] INFO [Controller id=0] New partition creation callback for message-0 (kafka.controller.KafkaController)
[2020-07-10 18:04:38,693] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-10 18:04:38,693] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-10 18:04:38,694] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-10 18:04:38,694] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-10 18:09:38,694] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-10 18:09:38,694] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-10 18:09:38,695] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-10 18:09:38,695] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-10 18:14:38,695] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-10 18:14:38,695] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-10 18:14:38,696] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-10 18:14:38,696] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-10 18:19:38,697] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-10 18:19:38,697] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-10 18:19:38,697] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-10 18:19:38,697] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-10 18:20:59,413] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-07-10 18:20:59,413] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-07-10 18:20:59,414] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-07-10 18:20:59,418] TRACE [Controller id=0] All leaders = stateful_data_of_query-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),message-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),Event_Error-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),Prediction-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),metadata_input-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),change_log_of_query-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),Processing_completed-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2020-07-10 18:21:00,693] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-07-10 18:21:00,720] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-07-10 18:21:00,720] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-07-10 18:21:00,721] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-07-10 18:21:00,722] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-07-10 18:21:00,724] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-07-10 18:21:00,725] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-07-10 18:21:00,725] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-07-10 18:21:00,725] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-07-10 18:21:00,725] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-07-10 18:21:00,729] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-07-10 18:21:34,920] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@4ca8195f, name=log4j:logger=kafka.controller (kafka.controller)
[2020-07-10 18:22:11,336] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-07-10 18:22:11,384] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2020-07-10 18:22:11,384] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-07-10 18:22:11,391] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-07-10 18:22:11,397] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-07-10 18:22:11,402] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-07-10 18:22:11,422] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 236) (kafka.controller.KafkaController)
[2020-07-10 18:22:11,444] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-07-10 18:22:11,465] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-07-10 18:22:11,485] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-07-10 18:22:11,487] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-07-10 18:22:11,487] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-07-10 18:22:11,488] INFO [Controller id=0] Current list of topics in the cluster: HashSet(change_log_of_query, Processing_completed, Prediction, message, metadata_input, stateful_data_of_query, Event_Error) (kafka.controller.KafkaController)
[2020-07-10 18:22:11,489] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-07-10 18:22:11,507] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-07-10 18:22:11,507] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-07-10 18:22:11,508] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-07-10 18:22:11,508] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2020-07-10 18:22:11,509] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-07-10 18:22:11,544] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-07-10 18:22:11,554] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-07-10 18:22:11,570] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-07-10 18:22:11,599] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-07-10 18:22:11,600] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=Event_Error,Partition=0,Replica=0] -> OnlineReplica, [Topic=message,Partition=0,Replica=0] -> OnlineReplica, [Topic=change_log_of_query,Partition=0,Replica=0] -> OnlineReplica, [Topic=Processing_completed,Partition=0,Replica=0] -> OnlineReplica, [Topic=stateful_data_of_query,Partition=0,Replica=0] -> OnlineReplica, [Topic=metadata_input,Partition=0,Replica=0] -> OnlineReplica, [Topic=Prediction,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-07-10 18:22:11,601] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-07-10 18:22:11,606] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-07-10 18:22:11,610] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(stateful_data_of_query-0 -> OnlinePartition, message-0 -> OnlinePartition, Event_Error-0 -> OnlinePartition, Prediction-0 -> OnlinePartition, metadata_input-0 -> OnlinePartition, change_log_of_query-0 -> OnlinePartition, Processing_completed-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-07-10 18:22:11,611] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2020-07-10 18:22:11,624] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-07-10 18:22:11,624] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-07-10 18:22:11,625] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-07-10 18:22:11,626] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-07-10 18:22:11,628] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-07-10 18:22:11,664] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-07-10 18:22:16,665] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-10 18:22:16,666] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-10 18:22:16,669] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-10 18:22:16,671] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-10 18:27:16,671] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-10 18:27:16,672] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-10 18:27:16,673] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-10 18:27:16,673] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-10 18:32:16,673] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-10 18:32:16,674] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-10 18:32:16,675] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-10 18:32:16,675] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-10 18:37:16,675] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-10 18:37:16,675] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-10 18:37:16,676] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-10 18:37:16,676] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-10 18:42:16,676] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-10 18:42:16,677] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-10 18:42:16,677] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-10 18:42:16,677] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-10 18:47:16,678] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-10 18:47:16,678] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-10 18:47:16,679] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-10 18:47:16,679] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-10 18:52:16,680] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-10 18:52:16,680] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-10 18:52:16,680] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-10 18:52:16,680] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-10 18:57:16,681] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-10 18:57:16,681] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-10 18:57:16,682] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-10 18:57:16,682] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
